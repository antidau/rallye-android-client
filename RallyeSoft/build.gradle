/*
 * Copyright (c) 2014 Jakob Wenzel, Ramon Wirsch.
 *
 * This file is part of RallyeSoft.
 *
 * RallyeSoft is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * RallyeSoft is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with RallyeSoft. If not, see <http://www.gnu.org/licenses/>.
 */









apply plugin: 'com.android.application'// cannot be loaded using plugins{} because it is already on the classpath

repositories {
	maven { url "http://dl.bintray.com/populov/maven" }// ViewPagerIndicator
	mavenCentral()
}

def gmsVersion = '6.5.87'

dependencies {
	compile project(':common:RallyeStructures')
	compile 'com.squareup.retrofit:retrofit:1.9.+'
//	compile 'com.squareup.retrofit:converter-jackson:1.6.+'// 1 class, reimplemented by us for better performance and compliance with Smile
	compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-smile:2.5.+'
	compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.+'
	compile 'com.viewpagerindicator:library:2.4.1@aar'
//	compile 'com.astuetz:pagerslidingtabstrip:1.0.1@aar'
	compile 'com.android.support:support-v4:21.0.3'
	compile 'com.android.support:appcompat-v7:21.0.3'
	//compile 'com.android.support:support-v13:21.0.3'
	compile "com.google.android.gms:play-services-maps:$gmsVersion"
	compile "com.google.android.gms:play-services-location:$gmsVersion"
}

android {

	compileSdkVersion rootProject.ext.compileSdkVersion
	buildToolsVersion rootProject.ext.buildToolsVersion

	defaultConfig {
		minSdkVersion 15
		targetSdkVersion 22
		//versionCode xx
		//versionName "x.x"
	}

	packagingOptions {
		exclude 'META-INF/ASL2.0'
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/NOTICE'
		exclude 'META-INF/services/com.fasterxml.jackson.core.JsonFactory'
	}

	/*lintOptions {
		abortOnError false
	}*/

	signingConfigs {
		release
	}

	buildTypes {
		debugSigned {
			debuggable true
			jniDebuggable true
			signingConfig signingConfigs.release
		}
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.txt'
			signingConfig signingConfigs.release
		}
		debug {
			//signingConfig signingConfigs.release
		}
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}

	def Properties props = new Properties()
	def propFile = new File('signing.properties')
	if (propFile.canRead()) {
		props.load(new FileInputStream(propFile))
		if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
				props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
			android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
			android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
			android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
			android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
		} else {
			println 'signing.properties found but some entries are missing'
			android.buildTypes.release.signingConfig = null
		}
	} else {
		println 'signing.properties not found'
		android.buildTypes.release.signingConfig = null
	}
	dexOptions {
	}
}
